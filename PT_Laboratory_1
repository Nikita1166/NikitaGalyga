#include <windows.h>
#include <iostream>
#include <string>
#include <ctime>
long int rez= 0;
class Iterator  {
public:
    void Next(LPTSTR Path, LPTSTR Exp);
};
void Iterator :: Next(LPTSTR Path, LPTSTR Exp)
{
    WIN32_FIND_DATA FileInfo;

    HANDLE h = FindFirstFile(strcat(Path,"\\*.*"),&FileInfo);
    Path[strlen(Path) - strlen(strstr(Path,"*.*"))] = '\0';
    if (h!=INVALID_HANDLE_VALUE)    {
        char * a;
        while (FindNextFile(h,&FileInfo))   {

            if (strlen(FileInfo.cFileName) == 1 &&  strchr(FileInfo.cFileName,'.') !=NULL)
               if (FindNextFile(h,&FileInfo) == 0)
                    break;
            if (strlen(FileInfo.cFileName) == 2 && strstr(FileInfo.cFileName,"..") !=NULL)
                if(FindNextFile(h,&FileInfo) == 0)
                    break;
            if(FileInfo.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) {
                Next(strcat(Path,FileInfo.cFileName), Exp);
                Path[strlen(Path) - strlen(FileInfo.cFileName)- 1] = '\0';
            }
            if((a = strrchr(FileInfo.cFileName,'.'))) {
                if(strstr(a + 1,Exp)) {
                    CharToOem(Path,Path);
                    std::cout << ("%s",Path);
                    OemToChar(Path,Path);
                    CharToOem(FileInfo.cFileName,FileInfo.cFileName);
                    std::cout << ("%s",FileInfo.cFileName) << std::endl;
                    rez++;
                }
            }
        }
    }
}

class Base  {
public:
    void StartCounter();
    double GetCounter();
};
void Base::StartCounter()  {
    int t1 = clock();
}
double Base::GetCounter()   {
    int t2 = clock();
    int t1 = t2 - t1;
    std::cout << "Время выполниния операции поиска файлов: " << t1 << " тактов времени, или " << ((float)t1) / CLOCKS_PER_SEC << " секунд"<< std::endl;
}

void GetFileList(LPTSTR sPath, LPTSTR sExt);

int main(){
    Base start, get;
    setlocale(LC_ALL, "rus");
    char Path[100], Exp[10];
    std::cout << "Введите директорию поиска: ";
    std::cin >> Path;
    std::cout << "Введите расширение: ";
    std::cin >> Exp;
    Iterator a;
    start.StartCounter();
    a.Next(Path, Exp);
    get.GetCounter();
    std::cout << "Всего найдено файлов = " << rez << std::endl;
}
